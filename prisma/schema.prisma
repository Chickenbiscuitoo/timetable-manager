// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Teacher {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @unique @db.VarChar(128)
  shortname             String                  @unique @db.VarChar(8)
  email                 String                  @unique @db.VarChar(255)
  classId               Class?
  commitee              Committee?
  lessons               Lesson[]
  bindings              Binding[]
  BindingTeacherLessons BindingTeacherLessons[]
}

model Subject {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(255)
  shortname  String   @unique @db.VarChar(8)
  commiteeId Int
  lessons    Lesson[]

  commitee Committee @relation(fields: [commiteeId], references: [id])
  Binding  Binding[]

  @@index([commiteeId])
}

model Committee {
  id         Int       @id @default(autoincrement())
  name       String    @unique @db.VarChar(255)
  chairmanId Int       @unique
  subjects   Subject[]

  chairman Teacher @relation(fields: [chairmanId], references: [id])
}

model Class {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(32)
  grade     Int
  teacherId Int      @unique
  lessons   Lesson[]

  teacher Teacher   @relation(fields: [teacherId], references: [id])
  Binding Binding[]
}

model Lesson {
  id       Int       @id @default(autoincrement())
  classId  Int
  subjects Subject[]
  teachers Teacher[]
  day      Int
  period   Int

  class Class @relation(fields: [classId], references: [id])

  @@unique([day, period, classId])
  @@index([classId])
}

model Binding {
  id        Int       @id @default(autoincrement())
  teachers  Teacher[]
  subjectId Int
  classId   Int

  class                 Class                   @relation(fields: [classId], references: [id])
  subject               Subject                 @relation(fields: [subjectId], references: [id])
  BindingTeacherLessons BindingTeacherLessons[]

  @@unique([subjectId, classId])
  @@index([classId])
}

model BindingTeacherLessons {
  bindingId Int
  teacherId Int
  lessons   Int

  binding Binding @relation(fields: [bindingId], references: [id], onDelete: Cascade)
  teacher Teacher @relation(fields: [teacherId], references: [id], onDelete: Cascade)

  @@id([bindingId, teacherId])
  @@index([bindingId])
  @@index([teacherId])
}
